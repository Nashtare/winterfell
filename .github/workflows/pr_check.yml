name: PR check

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  pull-requests: write

jobs:
  pr_check:
    name: Validate PR
    runs-on: ubuntu-latest
    steps:
      - name: Set up keywords
        id: setup_keywords
        run: echo "RESTRICTED_KEYWORDS=$(echo '${{ secrets.RESTRICTED_KEYWORDS }}' | jq -r '.[]' | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Check for spam PR
        id: check
        run: |
          # Initialize variables to track forbidden words presence
          title_contains_forbidden_word=false
          description_contains_forbidden_word=false
          
          # Check title for forbidden words
          for keyword in $RESTRICTED_KEYWORDS; do
            if echo "${{ github.event.pull_request.title }}" | grep -i -q "$keyword"; then
              title_contains_forbidden_word=true
              break
            fi
          done

          # Check description for forbidden words
          for keyword in $RESTRICTED_KEYWORDS; do
            if echo "${{ github.event.pull_request.body }}" | grep -i -q "$keyword"; then
              description_contains_forbidden_word=true
              break
            fi
          done

          # Set the output based on the presence of forbidden words
          if [ "$title_contains_forbidden_word" = true ] || [ "$description_contains_forbidden_word" = true ]; then
            echo "forbidden_word_found=true" >> $GITHUB_ENV
          else
            echo "forbidden_word_found=false" >> $GITHUB_ENV
          fi

      - name: Checkout repository
        if: ${{ env.forbidden_word_found == 'true' && (github.event.pull_request.author_association != 'CONTRIBUTOR' && github.event.pull_request.author_association != 'MEMBER' && github.event.pull_request.author_association != 'OWNER') }}
        uses: actions/checkout@v4

      - name: Close PR if forbidden words are found and author is not a contributor or member
        if: ${{ env.forbidden_word_found == 'true' && github.event.pull_request.author_association != 'CONTRIBUTOR' && github.event.pull_request.author_association != 'MEMBER' && github.event.pull_request.author_association != 'OWNER' }}
        run: gh pr close ${{ github.event.pull_request.number }} --comment "Spam detected"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
