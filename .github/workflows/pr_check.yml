name: PR check

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  pull-requests: write

jobs:
  pr_check:
    name: Validate PR
    runs-on: ubuntu-latest
    steps:
      - name: Check for spam PR
        id: check
        run: |
          # Read the restricted keywords from the secret
          restricted_keywords=${{ secrets.RESTRICTED_KEYWORDS }}
          
          # Check if the title or body contains any restricted keywords
          title_contains_forbidden_word=$(echo "$restricted_keywords" | jq -r '.[]' | grep -i -E -o "${{ github.event.pull_request.title }}" | wc -l)
          description_contains_forbidden_word=$(echo "$restricted_keywords" | jq -r '.[]' | grep -i -E -o "${{ github.event.pull_request.body }}" | wc -l)

          if [ $title_contains_forbidden_word -gt 0 ] || [ $description_contains_forbidden_word -gt 0 ]; then
            echo "::set-output name=considered_spam::true"
          else
            echo "::set-output name=considered_spam::false"
          fi

      - name: Close PR if PR is considered spam and author is not a contributor or member
        if: ${{ steps.check.outputs.considered_spam == 'true' && (github.event.pull_request.author_association != 'CONTRIBUTOR' && github.event.pull_request.author_association != 'MEMBER') }}
        run: gh pr close ${{ github.event.pull_request.number }} --comment "Spam detected"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}